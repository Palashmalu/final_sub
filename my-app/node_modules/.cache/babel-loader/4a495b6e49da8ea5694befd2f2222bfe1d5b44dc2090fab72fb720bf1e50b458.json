{"ast":null,"code":"var _jsxFileName = \"/Users/palashmalu/Desktop/trust_wise project/my-app/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [model, setModel] = useState('model_1'); // Default model\n//   const [text, setText] = useState('');\n//   const [result, setResult] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   const analyzeText = async (e) => {\n//     e.preventDefault();\n\n//     if (text.trim() === \"\") {\n//       setResult(\"Please enter the text properly.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     setResult(null); // Clear previous result during loading\n\n//     try {\n//       const response = await axios.post(`http://127.0.0.1:8000/result/${model}`, {\n//         text,\n//       });\n//       setResult(response.data.analysis); // Assuming 'analysis' is returned from the backend\n//     } catch (error) {\n//       if (error.response && error.response.status === 400) {\n//         setResult(error.response.data.detail || \"Please enter the text properly.\");\n//       } else {\n//         setResult(\"An unexpected error occurred. Please try again.\");\n//       }\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"heading\">Text Analysis</h1>\n//       <form onSubmit={analyzeText} className=\"form\">\n//         {/* Model selection dropdown */}\n//         <label className=\"label\">\n//           Choose Model:\n//           <select\n//             value={model}\n//             onChange={(e) => setModel(e.target.value)}\n//             className=\"model\"\n//           >\n//             <option value=\"model_1\">Roberta Base Go Emotions</option>\n//             <option value=\"model_2\">Bert Base Multilingual Sentiment</option>\n//           </select>\n//         </label>\n\n//         {/* Text input */}\n//         <label className=\"label\">\n//           Enter text:\n//           <input\n//             type=\"text\"\n//             value={text}\n//             onChange={(e) => setText(e.target.value)}\n//             className=\"textInput\"\n//             placeholder=\"Enter text to analyze...\"\n//           />\n//         </label>\n\n//         {/* Submit Button */}\n//         <button type=\"submit\" disabled={loading} className=\"button\">\n//           {loading ? 'Analyzing...' : 'Analyze Text'}\n//         </button>\n//       </form>\n\n//       {/* Result Display */}\n//       {loading ? (\n//         <div className=\"loading\">Loading, please wait...</div>\n//       ) : result && (\n//         <div className=\"result\">\n//           {result.label ? (\n//             <>\n//               <h2>Result:</h2>\n//               <p>Label: {result.label}</p>\n//               <p>Score: {result.score}</p>\n//             </>\n//           ) : (\n//             <p style={{ color: \"red\" }}>{result}</p> // Show errors in red\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ChartComponent from './ChartComponent'; // Assuming you created this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [model, setModel] = useState('model_1'); // Default model\n  const [text, setText] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const analyzeText = async e => {\n    e.preventDefault();\n    if (text.trim() === \"\") {\n      setResult(\"Please enter the text properly.\");\n      return;\n    }\n    setLoading(true);\n    setResult(null); // Clear previous result during loading\n\n    try {\n      const response = await axios.post(`http://127.0.0.1:8000/result/${model}`, {\n        text\n      });\n      setResult(response.data.analysis); // Assuming 'analysis' is an array or object\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        setResult(error.response.data.detail || \"Please enter the text properly.\");\n      } else {\n        setResult(\"An unexpected error occurred. Please try again.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Prepare data for the chart\n  const getChartData = () => {\n    if (!result || !Array.isArray(result)) {\n      return null;\n    }\n    return {\n      labels: result.map(item => item.label),\n      datasets: [{\n        label: 'Scores',\n        data: result.map(item => item.score),\n        backgroundColor: 'rgba(54, 162, 235, 0.6)'\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Text Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: analyzeText,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"Choose Model:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: model,\n          onChange: e => setModel(e.target.value),\n          className: \"model\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"model_1\",\n            children: \"Roberta Base Go Emotions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"model_2\",\n            children: \"Bert Base Multilingual Sentiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"Enter text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          className: \"textInput\",\n          placeholder: \"Enter text to analyze...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"button\",\n        children: loading ? 'Analyzing...' : 'Analyze Text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading, please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this) : result ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Array.isArray(result) && /*#__PURE__*/_jsxDEV(ChartComponent, {\n        chartData: getChartData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this), !Array.isArray(result) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(result, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ENIB5gb4COj80GfKA+UaN1Z9CJE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","ChartComponent","jsxDEV","_jsxDEV","App","_s","model","setModel","text","setText","result","setResult","loading","setLoading","analyzeText","e","preventDefault","trim","response","post","data","analysis","error","status","detail","getChartData","Array","isArray","labels","map","item","label","datasets","score","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","type","placeholder","disabled","chartData","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/palashmalu/Desktop/trust_wise project/my-app/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [model, setModel] = useState('model_1'); // Default model\n//   const [text, setText] = useState('');\n//   const [result, setResult] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   const analyzeText = async (e) => {\n//     e.preventDefault();\n\n//     if (text.trim() === \"\") {\n//       setResult(\"Please enter the text properly.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     setResult(null); // Clear previous result during loading\n\n//     try {\n//       const response = await axios.post(`http://127.0.0.1:8000/result/${model}`, {\n//         text,\n//       });\n//       setResult(response.data.analysis); // Assuming 'analysis' is returned from the backend\n//     } catch (error) {\n//       if (error.response && error.response.status === 400) {\n//         setResult(error.response.data.detail || \"Please enter the text properly.\");\n//       } else {\n//         setResult(\"An unexpected error occurred. Please try again.\");\n//       }\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"heading\">Text Analysis</h1>\n//       <form onSubmit={analyzeText} className=\"form\">\n//         {/* Model selection dropdown */}\n//         <label className=\"label\">\n//           Choose Model:\n//           <select\n//             value={model}\n//             onChange={(e) => setModel(e.target.value)}\n//             className=\"model\"\n//           >\n//             <option value=\"model_1\">Roberta Base Go Emotions</option>\n//             <option value=\"model_2\">Bert Base Multilingual Sentiment</option>\n//           </select>\n//         </label>\n\n//         {/* Text input */}\n//         <label className=\"label\">\n//           Enter text:\n//           <input\n//             type=\"text\"\n//             value={text}\n//             onChange={(e) => setText(e.target.value)}\n//             className=\"textInput\"\n//             placeholder=\"Enter text to analyze...\"\n//           />\n//         </label>\n\n//         {/* Submit Button */}\n//         <button type=\"submit\" disabled={loading} className=\"button\">\n//           {loading ? 'Analyzing...' : 'Analyze Text'}\n//         </button>\n//       </form>\n\n//       {/* Result Display */}\n//       {loading ? (\n//         <div className=\"loading\">Loading, please wait...</div>\n//       ) : result && (\n//         <div className=\"result\">\n//           {result.label ? (\n//             <>\n//               <h2>Result:</h2>\n//               <p>Label: {result.label}</p>\n//               <p>Score: {result.score}</p>\n//             </>\n//           ) : (\n//             <p style={{ color: \"red\" }}>{result}</p> // Show errors in red\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ChartComponent from './ChartComponent'; // Assuming you created this component\n\nfunction App() {\n  const [model, setModel] = useState('model_1'); // Default model\n  const [text, setText] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const analyzeText = async (e) => {\n    e.preventDefault();\n\n    if (text.trim() === \"\") {\n      setResult(\"Please enter the text properly.\");\n      return;\n    }\n\n    setLoading(true);\n    setResult(null); // Clear previous result during loading\n\n    try {\n      const response = await axios.post(`http://127.0.0.1:8000/result/${model}`, {\n        text,\n      });\n      setResult(response.data.analysis); // Assuming 'analysis' is an array or object\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        setResult(error.response.data.detail || \"Please enter the text properly.\");\n      } else {\n        setResult(\"An unexpected error occurred. Please try again.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Prepare data for the chart\n  const getChartData = () => {\n    if (!result || !Array.isArray(result)) {\n      return null;\n    }\n\n    return {\n      labels: result.map((item) => item.label),\n      datasets: [\n        {\n          label: 'Scores',\n          data: result.map((item) => item.score),\n          backgroundColor: 'rgba(54, 162, 235, 0.6)',\n        },\n      ],\n    };\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"heading\">Text Analysis</h1>\n      <form onSubmit={analyzeText} className=\"form\">\n        <label className=\"label\">\n          Choose Model:\n          <select\n            value={model}\n            onChange={(e) => setModel(e.target.value)}\n            className=\"model\"\n          >\n            <option value=\"model_1\">Roberta Base Go Emotions</option>\n            <option value=\"model_2\">Bert Base Multilingual Sentiment</option>\n          </select>\n        </label>\n\n        <label className=\"label\">\n          Enter text:\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            className=\"textInput\"\n            placeholder=\"Enter text to analyze...\"\n          />\n        </label>\n\n        <button type=\"submit\" disabled={loading} className=\"button\">\n          {loading ? 'Analyzing...' : 'Analyze Text'}\n        </button>\n      </form>\n\n      {loading ? (\n        <div className=\"loading\">Loading, please wait...</div>\n      ) : result ? (\n        <div>\n          {Array.isArray(result) && (\n            <ChartComponent chartData={getChartData()} />\n          )}\n          {!Array.isArray(result) && (\n            <div className=\"result\">\n              <pre>{JSON.stringify(result, null, 2)}</pre>\n            </div>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
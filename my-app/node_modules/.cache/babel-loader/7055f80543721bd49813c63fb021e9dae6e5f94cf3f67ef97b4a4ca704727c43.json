{"ast":null,"code":"var _jsxFileName = \"/Users/palashmalu/Desktop/trust_wise project/my-app/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [model, setModel] = useState('model_1'); // Default model\n//   const [text, setText] = useState('');\n//   const [result, setResult] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   const analyzeText = async (e) => {\n//     e.preventDefault();\n\n//     if (text.trim() === \"\") {\n//       setResult(\"Please enter the text properly.\");\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     try {\n//       const response = await axios.post(`http://127.0.0.1:8000/result/${model}`, {\n//         text,\n//       });\n//       setResult(response.data.analysis); // Assuming 'analysis' is returned from the backend\n//     } catch (error) {\n//       if (error.response && error.response.status === 400) {\n//         setResult(error.response.data.detail || \"Please enter the text properly.\");\n//       } else {\n//         setResult(\"An unexpected error occurred. Please try again.\");\n//       }\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"heading\">Text Analysis</h1>\n//       <form onSubmit={analyzeText} className=\"form\">\n//         {/* Model selection dropdown */}\n//         <label className=\"label\">\n//           Choose Model:\n//           <select\n//             value={model}\n//             onChange={(e) => setModel(e.target.value)}\n//             className=\"model\"\n//           >\n//             <option value=\"model_1\">Roberta Base Go Emotions</option>\n//             <option value=\"model_2\">Bert Base Multilingual Sentiment</option>\n//           </select>\n//         </label>\n\n//         {/* Text input */}\n//         <label className=\"label\">\n//           Enter text:\n//           <input\n//             type=\"text\"\n//             value={text}\n//             onChange={(e) => setText(e.target.value)}\n//             className=\"textInput\"\n//             placeholder=\"Enter text to analyze...\"\n//           />\n//         </label>\n\n//         {/* Submit Button */}\n//         <button type=\"submit\" disabled={loading} className=\"button\">\n//           {loading ? 'Analyzing...' : 'Analyze Text'}\n//         </button>\n//       </form>\n\n//       {/* Result Display */}\n//       {result && (\n//         <div className=\"result\">\n//           <h2>Result:</h2>\n//           <p>Label: {result.label}</p>\n//           <p>Score: {result.score}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [model, setModel] = useState('model_1'); // Default model\n  const [text, setText] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const analyzeText = async e => {\n    e.preventDefault();\n    if (text.trim() === \"\") {\n      setResult(\"Please enter the text properly.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.post(`http://127.0.0.1:8000/result/${model}`, {\n        text\n      });\n      setResult(response.data.analysis); // Assuming 'analysis' is returned from the backend\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        setResult(error.response.data.detail || \"Please enter the text , there is not input\");\n      } else {\n        setResult(\"An unexpected error occurred. Please try again.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Text Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: analyzeText,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"Choose Model:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: model,\n          onChange: e => setModel(e.target.value),\n          className: \"model\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"model_1\",\n            children: \"Roberta Base Go Emotions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"model_2\",\n            children: \"Bert Base Multilingual Sentiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"Enter text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          className: \"textInput\",\n          placeholder: \"Enter text to analyze...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"button\",\n        children: loading ? 'Analyzing...' : 'Analyze Text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: result.label ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Label: \", result.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Score: \", result.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this) // Show errors in red\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ENIB5gb4COj80GfKA+UaN1Z9CJE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","model","setModel","text","setText","result","setResult","loading","setLoading","analyzeText","e","preventDefault","trim","response","post","data","analysis","error","status","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","type","placeholder","disabled","label","score","style","color","_c","$RefreshReg$"],"sources":["/Users/palashmalu/Desktop/trust_wise project/my-app/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [model, setModel] = useState('model_1'); // Default model\n//   const [text, setText] = useState('');\n//   const [result, setResult] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n\n//   const analyzeText = async (e) => {\n//     e.preventDefault();\n  \n//     if (text.trim() === \"\") {\n//       setResult(\"Please enter the text properly.\");\n//       return;\n//     }\n  \n//     setLoading(true);\n  \n//     try {\n//       const response = await axios.post(`http://127.0.0.1:8000/result/${model}`, {\n//         text,\n//       });\n//       setResult(response.data.analysis); // Assuming 'analysis' is returned from the backend\n//     } catch (error) {\n//       if (error.response && error.response.status === 400) {\n//         setResult(error.response.data.detail || \"Please enter the text properly.\");\n//       } else {\n//         setResult(\"An unexpected error occurred. Please try again.\");\n//       }\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n  \n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"heading\">Text Analysis</h1>\n//       <form onSubmit={analyzeText} className=\"form\">\n//         {/* Model selection dropdown */}\n//         <label className=\"label\">\n//           Choose Model:\n//           <select\n//             value={model}\n//             onChange={(e) => setModel(e.target.value)}\n//             className=\"model\"\n//           >\n//             <option value=\"model_1\">Roberta Base Go Emotions</option>\n//             <option value=\"model_2\">Bert Base Multilingual Sentiment</option>\n//           </select>\n//         </label>\n\n//         {/* Text input */}\n//         <label className=\"label\">\n//           Enter text:\n//           <input\n//             type=\"text\"\n//             value={text}\n//             onChange={(e) => setText(e.target.value)}\n//             className=\"textInput\"\n//             placeholder=\"Enter text to analyze...\"\n//           />\n//         </label>\n\n//         {/* Submit Button */}\n//         <button type=\"submit\" disabled={loading} className=\"button\">\n//           {loading ? 'Analyzing...' : 'Analyze Text'}\n//         </button>\n//       </form>\n\n//       {/* Result Display */}\n//       {result && (\n//         <div className=\"result\">\n//           <h2>Result:</h2>\n//           <p>Label: {result.label}</p>\n//           <p>Score: {result.score}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [model, setModel] = useState('model_1'); // Default model\n  const [text, setText] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const analyzeText = async (e) => {\n    e.preventDefault();\n\n    if (text.trim() === \"\") {\n      setResult(\"Please enter the text properly.\");\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const response = await axios.post(`http://127.0.0.1:8000/result/${model}`, {\n        text,\n      });\n      setResult(response.data.analysis); // Assuming 'analysis' is returned from the backend\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        setResult(error.response.data.detail || \"Please enter the text , there is not input\");\n      } else {\n        setResult(\"An unexpected error occurred. Please try again.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"heading\">Text Analysis</h1>\n      <form onSubmit={analyzeText} className=\"form\">\n        {/* Model selection dropdown */}\n        <label className=\"label\">\n          Choose Model:\n          <select\n            value={model}\n            onChange={(e) => setModel(e.target.value)}\n            className=\"model\"\n          >\n            <option value=\"model_1\">Roberta Base Go Emotions</option>\n            <option value=\"model_2\">Bert Base Multilingual Sentiment</option>\n          </select>\n        </label>\n\n        {/* Text input */}\n        <label className=\"label\">\n          Enter text:\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            className=\"textInput\"\n            placeholder=\"Enter text to analyze...\"\n          />\n        </label>\n\n        {/* Submit Button */}\n        <button type=\"submit\" disabled={loading} className=\"button\">\n          {loading ? 'Analyzing...' : 'Analyze Text'}\n        </button>\n      </form>\n\n      {/* Result Display */}\n      {result && (\n        <div className=\"result\">\n          {result.label ? (\n            <>\n              <h2>Result:</h2>\n              <p>Label: {result.label}</p>\n              <p>Score: {result.score}</p>\n            </>\n          ) : (\n            <p style={{ color: \"red\" }}>{result}</p> // Show errors in red\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}